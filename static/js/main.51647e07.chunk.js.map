{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","regex","NewMovie","state","invalidTitle","invalidImgUrl","invalidImdbUrl","invalidImdbId","clearState","setState","checkTitle","value","checkImg","test","checkUrl","checkId","this","onAdd","props","onSubmit","event","preventDefault","classNames","type","placeholder","required","onChange","target","onBlur","disabled","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51647e07.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport { Component } from 'react';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\ntype State = {\n  title: string;\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n  invalidTitle: boolean;\n  invalidImgUrl: boolean;\n  invalidImdbUrl: boolean;\n  invalidImdbId: boolean;\n};\n\nconst regex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    invalidTitle: false,\n    invalidImgUrl: false,\n    invalidImdbUrl: false,\n    invalidImdbId: false,\n  };\n\n  clearState = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  checkTitle = (value: string) => {\n    this.setState({ invalidTitle: !value });\n  };\n\n  checkImg = (value: string) => {\n    this.setState({ invalidImgUrl: !value || !regex.test(value) });\n  };\n\n  checkUrl = (value: string) => {\n    this.setState({ invalidImdbUrl: !value || !regex.test(value) });\n  };\n\n  checkId = (value: string) => {\n    this.setState({ invalidImdbId: !value });\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imdbUrl,\n      imgUrl,\n      imdbId,\n      invalidImdbId,\n      invalidImdbUrl,\n      invalidImgUrl,\n      invalidTitle,\n    } = this.state;\n\n    const { onAdd } = this.props;\n\n    return (\n      <form\n        className=\"NewMovie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          onAdd(this.state);\n          this.clearState();\n        }}\n      >\n\n        <input\n          className={classNames(\n            'NewMovie__input',\n            { 'NewMovie__input--error': invalidTitle },\n          )}\n          type=\"text\"\n          value={title}\n          placeholder=\"enter title\"\n          required\n          onChange={event => {\n            this.setState({\n              title: event.target.value,\n              invalidTitle: false,\n            });\n          }}\n          onBlur={event => {\n            this.checkTitle(event.target.value);\n          }}\n        />\n\n        <p className=\"NewMovie__error\">\n          {invalidTitle && 'please enter title'}\n        </p>\n\n        <input\n          className=\"NewMovie__input\"\n          type=\"text\"\n          value={description}\n          placeholder=\"enter description\"\n          onChange={event => {\n            this.setState({ description: event.target.value });\n          }}\n        />\n\n        <input\n          className={classNames(\n            'NewMovie__input',\n            { 'NewMovie__input--error': invalidImgUrl },\n          )}\n          type=\"text\"\n          value={imgUrl}\n          placeholder=\"add image url\"\n          required\n          onChange={event => {\n            this.setState({\n              imgUrl: event.target.value,\n              invalidImgUrl: false,\n            });\n          }}\n          onBlur={event => {\n            this.checkImg(event.target.value);\n          }}\n        />\n\n        <p className=\"NewMovie__error\">\n          {invalidImgUrl && 'please enter valid image url'}\n        </p>\n\n        <input\n          className={classNames(\n            'NewMovie__input',\n            { 'NewMovie__input--error': invalidImdbUrl },\n          )}\n          type=\"text\"\n          value={imdbUrl}\n          placeholder=\"enter imdb url\"\n          required\n          onChange={event => {\n            this.setState({\n              imdbUrl: event.target.value,\n              invalidImdbUrl: false,\n            });\n          }}\n          onBlur={event => {\n            this.checkUrl(event.target.value);\n          }}\n        />\n\n        <p className=\"NewMovie__error\">\n          {invalidImdbUrl && 'please enter valid imdb url'}\n        </p>\n\n        <input\n          className={classNames(\n            'NewMovie__input',\n            { 'NewMovie__input--error': invalidImdbId },\n          )}\n          type=\"text\"\n          value={imdbId}\n          placeholder=\"enter imdb id\"\n          required\n          onChange={event => {\n            this.setState({\n              imdbId: event.target.value,\n              invalidImdbId: false,\n            });\n          }}\n          onBlur={event => {\n            this.checkId(event.target.value);\n          }}\n        />\n\n        <p className=\"NewMovie__error\">\n          {invalidImdbId && 'please enter valid ID'}\n        </p>\n\n        <button\n          className=\"NewMovie__button\"\n          type=\"submit\"\n          disabled={invalidImdbId\n            || invalidImdbUrl\n            || invalidImgUrl\n            || invalidTitle}\n        >\n          add movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onAdd={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}